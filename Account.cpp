#include "Account.h"
#include <iostream>
#include <ctime>
#include <iomanip>
#include <sstream>

Account::Account(const User& user, const std::string& username, 
                 const std::string& password, AccountType type,
                 bool isAutoGeneratedPassword)
    : user(user), username(username), 
      password(password), // Lưu mật khẩu trực tiếp
      creationDate(getCurrentDate()), isActive(true), type(type),
      isAutoGeneratedPassword(isAutoGeneratedPassword) {}

std::string Account::getUsername() const {
    return username;
}

bool Account::validatePassword(const std::string& passwordAttempt) const {
    // So sánh trực tiếp
    return password == passwordAttempt;
}

bool Account::isAccountActive() const {
    return isActive;
}

AccountType Account::getAccountType() const {
    return type;
}

bool Account::isPasswordAutoGenerated() const {
    return isAutoGeneratedPassword;
}

void Account::setPassword(const std::string& newPassword, bool isAutoGenerated) {
    password = newPassword; // Lưu mật khẩu mới trực tiếp
    isAutoGeneratedPassword = isAutoGenerated;
}

void Account::setActive(bool active) {
    isActive = active;
}

void Account::setType(AccountType type) {
    this->type = type;
}

const User& Account::getUser() const {
    return user;
}

User& Account::getUser() {
    return user;
}

void Account::displayInfo() const {
    std::cout << "=== Thong tin tai khoan ===" << std::endl;
    std::cout << "Ten dang nhap: " << username << std::endl;
    std::cout << "Ngay tao: " << creationDate << std::endl;
    std::cout << "Trang thai: " << (isActive ? "Hoat dong" : "Da khoa") << std::endl;
    std::cout << "Loai tai khoan: " << (type == AccountType::ADMIN ? "Quan tri vien" : "Nguoi dung thuong") << std::endl;
    std::cout << "Mat khau: " << (isAutoGeneratedPassword ? "Tu dong sinh" : "Do nguoi dung dat") << std::endl;
    std::cout << "\n=== Thong tin nguoi dung ===" << std::endl;
    user.displayInfo();
}

std::string Account::getCurrentDate() {
    auto now = std::time(nullptr);
    auto tm = *std::localtime(&now);
    
    std::ostringstream oss;
    oss << std::put_time(&tm, "%d/%m/%Y %H:%M:%S");
    return oss.str();
}

// Chuyển đổi account thành chuỗi (format để lưu vào file)
std::string Account::toString() const {
    std::stringstream ss;
    ss << username << "||" 
       << password << "||" // Lưu mật khẩu trực tiếp
       << creationDate << "||" 
       << (isActive ? "1" : "0") << "||" 
       << (type == AccountType::ADMIN ? "ADMIN" : "REGULAR") << "||"
       << (isAutoGeneratedPassword ? "1" : "0") << "||"
       << user.getFullName() << "||" 
       << user.getDateOfBirth() << "||" 
       << user.getAddress() << "||" 
       << user.getPhoneNumber() << "||" 
       << user.getEmail();
    return ss.str();
}

// Tạo account từ chuỗi - Phiên bản đơn giản hóa
Account Account::fromString(const std::string& str) {
    std::stringstream ss(str);
    std::string username, password, creationDate, activeStr, typeStr, autoPassStr;
    std::string fullName, dateOfBirth, address, phoneNumber, email;
    
    // Sử dụng dấu ngăn cách đơn '|'
    std::getline(ss, username, '|');
    std::getline(ss, password, '|');
    std::getline(ss, creationDate, '|');
    std::getline(ss, activeStr, '|');
    std::getline(ss, typeStr, '|');
    std::getline(ss, autoPassStr, '|');
    std::getline(ss, fullName, '|');
    std::getline(ss, dateOfBirth, '|');
    std::getline(ss, address, '|');
    std::getline(ss, phoneNumber, '|');
    std::getline(ss, email);
    
    User user;
    user.setFullName(fullName);
    user.setDateOfBirth(dateOfBirth);
    user.setAddress(address);
    user.setPhoneNumber(phoneNumber);
    user.setEmail(email);
    
    Account account;
    account.user = user;
    account.username = username;
    account.password = password;
    account.creationDate = creationDate;
    account.isActive = (activeStr == "1");
    account.type = (typeStr == "ADMIN") ? AccountType::ADMIN : AccountType::REGULAR;
    account.isAutoGeneratedPassword = (autoPassStr == "1");
    
    return account;
}