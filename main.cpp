#include <iostream>
#include <string>
#include <limits>
#include "AccountManager.h"

void clearInputBuffer() {
    std::cin.clear();
    std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
}

User inputUserInfo() {
    User user;
    std::string fullName, dateOfBirth, address, phoneNumber, email;
    
    std::cout << "=== Nhap thong tin nguoi dung ===" << std::endl;
    
    std::cout << "Ho va ten: ";
    std::getline(std::cin, fullName);
    user.setFullName(fullName);
    
    std::cout << "Ngay sinh (DD/MM/YYYY): ";
    std::getline(std::cin, dateOfBirth);
    user.setDateOfBirth(dateOfBirth);
    
    std::cout << "Dia chi: ";
    std::getline(std::cin, address);
    user.setAddress(address);
    
    std::cout << "So dien thoai: ";
    std::getline(std::cin, phoneNumber);
    user.setPhoneNumber(phoneNumber);
    
    std::cout << "Email: ";
    std::getline(std::cin, email);
    user.setEmail(email);
    
    return user;
}

void registerNewAccount(AccountManager& manager) {
    std::string username, password;
    AccountType type = AccountType::REGULAR;
    char choice;
    
    // Nhập thông tin người dùng
    User newUser = inputUserInfo();
    
    // Nhập thông tin tài khoản
    std::cout << "\n=== Tao tai khoan ===" << std::endl;
    
    std::cout << "Ten dang nhap: ";
    std::getline(std::cin, username);
    
    std::cout << "Tu tao mat khau hay sinh mat khau tu dong? (T/A): ";
    std::cin >> choice;
    clearInputBuffer();
    
    if (choice == 'A' || choice == 'a') {
        // Sinh mật khẩu tự động
        std::string autoPassword = manager.registerAccountWithAutoPassword(newUser, username, type);
        if (!autoPassword.empty()) {
            std::cout << "Mat khau tu dong sinh: " << autoPassword << std::endl;
            std::cout << "Vui long thong bao cho nguoi dung mat khau nay." << std::endl;
        }
    } else {
        // Người dùng tự nhập mật khẩu
        std::cout << "Mat khau: ";
        std::getline(std::cin, password);
        
        std::cout << "Loai tai khoan (A - Admin, U - User thuong): ";
        std::cin >> choice;
        clearInputBuffer();
        
        if (choice == 'A' || choice == 'a') {
            type = AccountType::ADMIN;
        }
        
        // Đăng ký tài khoản
        manager.registerAccount(newUser, username, password, type, false);
    }
}

void loginAccount(AccountManager& manager) {
    std::string username, password;
    
    std::cout << "=== Dang nhap ===" << std::endl;
    std::cout << "Ten dang nhap: ";
    std::getline(std::cin, username);
    
    std::cout << "Mat khau: ";
    std::getline(std::cin, password);
    
    if (manager.login(username, password)) {
        std::cout << "Dang nhap thanh cong!" << std::endl;
        
        // Kiểm tra xem có phải mật khẩu tự sinh không
        Account* account = manager.findAccount(username);
        if (account && account->isPasswordAutoGenerated()) {
            std::cout << "Ban can phai doi mat khau vi dang su dung mat khau tu dong sinh." << std::endl;
            
            std::string newPassword, confirmPassword;
            do {
                std::cout << "Nhap mat khau moi: ";
                std::getline(std::cin, newPassword);
                
                std::cout << "Xac nhan mat khau moi: ";
                std::getline(std::cin, confirmPassword);
                
                if (newPassword != confirmPassword) {
                    std::cout << "Mat khau xac nhan khong khop! Vui long thu lai." << std::endl;
                }
            } while (newPassword != confirmPassword);
            
            manager.forceChangePassword(username, newPassword);
        }
    }
}

void changePassword(AccountManager& manager) {
    if (!manager.isLoggedIn()) {
        std::cout << "Ban chua dang nhap! Vui long dang nhap truoc." << std::endl;
        return;
    }
    
    std::string currentPassword, newPassword, confirmPassword;
    std::string username = manager.getCurrentUser();
    
    std::cout << "=== Doi mat khau ===" << std::endl;
    std::cout << "Nhap mat khau hien tai: ";
    std::getline(std::cin, currentPassword);
    
    std::cout << "Nhap mat khau moi: ";
    std::getline(std::cin, newPassword);
    
    std::cout << "Xac nhan mat khau moi: ";
    std::getline(std::cin, confirmPassword);
    
    if (newPassword != confirmPassword) {
        std::cout << "Mat khau xac nhan khong khop!" << std::endl;
        return;
    }
    
    manager.changePassword(username, currentPassword, newPassword);
}

void backupData(AccountManager& manager) {
    manager.backupData();
}

void restoreData(AccountManager& manager) {
    manager.displayBackups();
    
    std::vector<std::string> backups = manager.listBackups();
    if (backups.empty()) {
        return;
    }
    
    int choice;
    std::cout << "Chon ban sao luu de phuc hoi (1-" << backups.size() << "): ";
    std::cin >> choice;
    clearInputBuffer();
    
    if (choice < 1 || choice > backups.size()) {
        std::cout << "Lua chon khong hop le!" << std::endl;
        return;
    }
    
    manager.restoreFromBackup(backups[choice - 1]);
}

void logout(AccountManager& manager) {
    if (manager.isLoggedIn()) {
        manager.logout();
        std::cout << "Da dang xuat thanh cong!" << std::endl;
    } else {
        std::cout << "Ban chua dang nhap!" << std::endl;
    }
}

void showMenu() {
    std::cout << "\nMENU:" << std::endl;
    std::cout << "1. Dang ky tai khoan moi" << std::endl;
    std::cout << "2. Dang nhap" << std::endl;
    std::cout << "3. Doi mat khau" << std::endl;
    std::cout << "4. Dang xuat" << std::endl;
    std::cout << "5. Hien thi tat ca tai khoan" << std::endl;
    std::cout << "6. Sao luu du lieu" << std::endl;
    std::cout << "7. Phuc hoi du lieu" << std::endl;
    std::cout << "0. Thoat" << std::endl;
}

int main() {
    std::cout << "CHUONG TRINH QUAN LY TAI KHOAN" << std::endl;
    std::cout << "--------------------------------" << std::endl;
    
    AccountManager manager("accounts.txt");
    
    int choice;
    do {
        showMenu();
        std::cout << "Lua chon cua ban: ";
        
        std::cin >> choice;
        clearInputBuffer();
        
        switch (choice) {
            case 1:
                registerNewAccount(manager);
                break;
            case 2:
                loginAccount(manager);
                break;
            case 3:
                changePassword(manager);
                break;
            case 4:
                logout(manager);
                break;
            case 5:
                manager.displayAllAccounts();
                break;
            case 6:
                backupData(manager);
                break;
            case 7:
                restoreData(manager);
                break;
            case 0:
                std::cout << "Tam biet!" << std::endl;
                break;
            default:
                std::cout << "Lua chon khong hop le!" << std::endl;
        }
    } while (choice != 0);
    
    return 0;
}